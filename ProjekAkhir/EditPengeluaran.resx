<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="gunaBtnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAJAAAACQCAYAAADnRuK4AAAABGdBTUEAALGPC/xhBQAABlhJREFUeF7t
        3c1uE0kYhWF2kWDBgtVcKkhwd0iDRsByNMw9zBo2k/le55SUZOy4j922q6rPI5VAibv7+zmKEiORVxER
        ERERERERERERERERERERERERERERsbL7+/u7Oh/q/FXnX/35vs6dXhIrY7Z1xp95Ffymzuc6+/xR551e
        GithpprtPuzitV7avyr2067sw77VSYhWwizrfGewL/iol/eviv37oeYXJUQrYIZ1joUHP3RJ/6rYXw81
        H5UQnYHZ1VkSHvzUZf2rYpd8BWoSohMwszpLw4OhvgId+x7ouYTIwKzqOOHBUN8D8VPYl13ZyyVECzCj
        Om54fq8zzk9hqILfqnDHn3V+0y3iGWajGTnYwVvdYiwUrgYcCdEezESzcYwbnoYG1IgjIXqEWWgmjvHD
        09CIGnIkRIUZaBaOecLT0JAac2w6RPSuGTjmC09DY2rQsckQ0bN6d8wbnoYG1ahjUyGiV/XsmD88DY2q
        YccmQkSP6tWxnfA0NKzGHVOHiN7Uo2N74WloXANwTBkielJvju2Gp2EAGoRjqhDRi3pyJDwNg9BAHFOE
        iB7UiyPheY6BaDCOoUNE7erBkfAcwmA0IMeQIaJm1e5IeI5hQBqUY6gQUatqdiQ8SzEoDcwxRIioUbU6
        Eh4XA9PgHF2HiNpUoyPhORWD0wAdXYaImlSbI+E5FwPUIB1dhYhaVJMj4VkLg9RAHV2EiBpUiyPhWRsD
        1WAdNw0Rz1YNjoTnUhisBuy4SYh4pp7tSHgujQFr0I6rhohn6ZmOhOdaGLQG7rhKiHiGnuVIeK6NgWvw
        jouGiHvrGY6E51YYvBbguEiIuKfu7Uh4bo0FaBGOVUPEvXRPR8LTCxahhThWCRH30L0cCU9vWIgW4zgr
        RFyrezgSnl6xGC3IcVKIuEbXOhKe3rEgLcphhYjX6hpHwjMKFqWFORaFiNfotY6EZzQsTItzvBgiPqfX
        OBKeUbE4LdCxN0R8TJ9zJDyjY4FapONJiPi7PuZIeGbBIrVQxy5EOgnP1rFQLdbBf1fs/JfFSHhmxWK1
        4EtJeGbHgrXotSU8W8GitfC1JDxbw8K1+HMlPFvF4hWAUyU8W0cA6nwlDSauSXi2rkLA+zz8akgX1yz+
        B9iYEAGo475J+NiTd6xjQ1i8AnCuhGhrWLgWv5aEaCtYtBa+toRodixYi76UhGhWLFYLdvB72A/9LvZD
        EqLZsFAt1rF7k1DHfbMxIZoFi9RCHU/eYebv+pgjIRodC9QiHXv/eYKP6XOOhGhULE4LdOwNT8Pn9BpH
        QjQaFqbFOV4MT8Nr9FpHQjQKFqWFORaFp+G1usaREPWOBWlRDis8DdfoWkdC1CsWowU5TgpPw7W6hyMh
        6g0L0WIcZ4Wn4R66lyMh6gWL0EIcq4Sn4V66pyMhujUWoEU4Vg1Pwz11b0dCdCsMXgtwXCQ8DffWMxwJ
        0bUxcA3ecdHwNDxDz3IkRNfCoDVwx1XC0/AsPdOREF0aA9agHVcNT8Mz9WxHQnQpDFYDdtwkPA3PVg2O
        hGhtDFSDddw0PA01qBZHQrQWBqmBOroIT0MtqsmREJ2LAWqQjq7C01CTanMkRKdicBqgo8vwNNSmGh0J
        kYuBaXCOrsPTUKNqdSRESzEoDcwxRHgaalXNjoToGAakQTmGCk9DzardkRAdwmA0IMeQ4WmoXT04EqLn
        GIgG4xg6PA09qBdHQtQwCA3EMUV4GnpRT46EiAFoEI6pwtPQk3pzbDdENK4BOKYMT0Nv6tGxvRDRsBp3
        TB2ehh7Vq2M7IaJRNezYRHgaelXPjvlDRINq1LGp8DT0rN4d84aIxtSgY5PhaehdM3DMFyIaUmOOTYen
        YQaahWOeENGIGnIkPI8wC83EMX6IaECNOBKePZiJZuMYN0QUrgYcCc8LmI1m5BgvRFXwmzpfqN7wrc47
        3SIOYEZ1vjMwA6F7rVv0r4r9tCt7uYTHwKzquCH6qMv7V8U6v2c04TkBM6vjhOiHLu1fFfvroeajEp4z
        MLs6S0P0U5f1r4pd8hUo4VkBM6yzJERDfQU69j1QwrMiZlnnWIiG+h6In8I+78r+P351QMKzMmaq2e7D
        Lsb5KQxV8F2dD3X4zX7/6M/3de70klgZs62TmUdEREREREREREREREREREREREREREREXN6rV/8Bymt9
        w/nuogoAAAAASUVORK5CYII=
</value>
  </data>
</root>